# Starter pipeline with SonarQube integration

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  pythonVersion: '3.6'

steps:
# Step 1: Set Fetch Depth to override shallow fetch and enable fetching blame information
- checkout: self
  fetchDepth: 0
  
# Step 2: Prepare Analysis Configuration
- task: SonarQubePrepare@5
  inputs:
    SonarQube: 'SonarQube Cloud'
    organization: 'nexadeepls'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'nexadeepls_CDC'
    cliProjectName: 'CDC'
  displayName: 'Prepare SonarQube Analysis'

# Build and test steps
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(pythonVersion)'
  displayName: 'Use Python $(pythonVersion)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
    pip install pytest pytest-cov
  displayName: 'Install dependencies'

- script: |
    pytest --cov=. --cov-report=xml tests/
  displayName: 'Run tests with coverage'

# Step 3: Run Code Analysis (after build steps)
- task: SonarQubeAnalyze@5
  displayName: 'Run SonarQube Code Analysis'

# Step 4: Publish Quality Gate Result
- task: SonarQubePublish@5
  inputs:
    pollingTimeoutSec: '300'
  displayName: 'Publish SonarQube Quality Gate Result'